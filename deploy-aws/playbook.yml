---

- name: "ensure security group exists"
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
  - global_vars.yml
  tags:
  - provision
  tasks:
  - ec2_group:
      name: csg-kubernetes-cluster
      description: "security group used by all machines in kubernetes cluster"
      region: "{{ aws_region }}"
      state: present
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        from_port: 8 # icmp type, -1 = any type
        to_port:  -1 # icmp subtype, -1 = any subtype
        cidr_ip: 0.0.0.0/0


- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
  - global_vars.yml
  tags:
  - provision
  tasks:
  - ec2:
      region: "{{ aws_region }}"
      instance_type: t2.micro
      instance_tags:
        Name: kubernetes-master
      count_tag:
        Name: kubernetes-master
      exact_count: 1
      image: "{{ per_region[aws_region]['ami'] }}"
      key_name: kubernetes-cluster
      group: csg-kubernetes-cluster
  - ec2:
      region: "{{ aws_region }}"
      instance_type: t2.nano
      instance_tags:
        Name: kubernetes-slave
      count_tag:
        Name: kubernetes-slave
      exact_count: 2
      image: "{{ per_region[aws_region]['ami'] }}"
      key_name: kubernetes-cluster
      group: csg-kubernetes-cluster


- hosts: tag_Name_kubernetes_master:tag_Name_kubernetes_slave
  gather_facts: false
  become: true
  become_method: sudo
  vars_files:
  - global_vars.yml
  tags:
  - deploy
  tasks:
  - name: "install python 2"
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
  - name: "generate local ip for OVN"
    set_fact:
      local_ip: "10.0.0.{{ 255 |random(start=1,seed=inventory_hostname) }}"
  - debug:
      msg: "Local IP = {{ local_ip }}"

- hosts: tag_Name_kubernetes_master
  become: true
  become_method: sudo
  vars_files:
  - global_vars.yml
  vars:
    central_ip: "{{ ec2_private_ip_address }}"
  tags:
  - deploy
  tasks:
  # http://docs.openvswitch.org/en/latest/intro/install/distributions/#debian
  - name: "install openvswitch-switch"
    apt:
      name: openvswitch-switch
      state: present
  - name: "install ovn-common"
    apt:
      name: ovn-common
      state: present
  - name: "install ovn-central"
    apt:
      name: ovn-central
      state: present
  # https://github.com/openvswitch/ovn-kubernetes#system-initialization
  # northd seems to be already up after package installation, but better safe than sorry
  - name: "start northd"
    shell: "/usr/share/openvswitch/scripts/ovn-ctl start_northd"
  - name: "add some entries to db"
    shell: >
      ovs-vsctl set Open_vSwitch . external_ids:ovn-remote="tcp:{{ central_ip }}:6642"
      external_ids:ovn-nb="tcp:{{ central_ip }}:6641"
      external_ids:ovn-encap-ip={{ local_ip }}
      external_ids:ovn-encap-type=geneve
  - name: "start OVN controller"
    shell: /usr/share/openvswitch/scripts/ovn-ctl start_controller
  - name: "install docker"
    include_role:
      name: angstwad.docker_ubuntu
  - name: "install kubernetes"
    include_role:
      name: gantsign.kubernetes
    vars:
      kubernetes_node_type: admin
  - name: "Set the k8s API server address in the OVS database"
    shell: ovs-vsctl set Open_vSwitch . external_ids:k8s-api-server="localhost:8080"
  - name: "clone ovn-kubernetes repository"
    git:
      repo: "https://github.com/openvswitch/ovn-kubernetes"
      dest: "ovn-k"
      force: true
  - name: "install requirements for ovn-kubernetes"
    shell: pip install .
    args:
      chdir: "ovn-k"
  - name: "initialize ovn master"
    shell: >
      ovn-k8s-overlay master-init
      --cluster-ip-subnet="10.0.0.0/24"
      --master-switch-subnet="10.0.1.0/24"
      --node-name="{{ ansible_hostname }}"
    args:
      chdir: "ovn-k"
  - name: "start watchers"
    shell: >
      ovn-k8s-watcher --overlay --pidfile --log-file -vfile:info -vconsole:emer --detach
    args:
      chdir: "ovn-k"

- hosts: tag_Name_kubernetes_slave
  become: true
  become_method: sudo
  vars_files:
  - global_vars.yml
  tags:
  - deploy
  tasks:
  # http://docs.openvswitch.org/en/latest/intro/install/distributions/#debian
  - set_fact:
      central_conn_ip: "{{ groups['tag_Name_kubernetes_master'][0] }}"
  - set_fact:
      central_ip: "{{ hostvars[central_conn_ip]['ec2_private_ip_address'] }}"
  - debug:
      msg: "Central IP: {{ central_ip }}"
  - name: "install openvswitch-switch"
    apt:
      name: openvswitch-switch
      state: present
  - name: "install ovn-common"
    apt:
      name: ovn-common
      state: present
  - name: "install ovn-host"
    apt:
      name: ovn-host
      state: present
  # https://github.com/openvswitch/ovn-kubernetes#system-initialization
  - name: "add some entries to db"
    shell: >
      ovs-vsctl set Open_vSwitch . external_ids:ovn-remote="tcp:{{ central_ip }}:6642"
      external_ids:ovn-nb="tcp:{{ central_ip }}:6641"
      external_ids:ovn-encap-ip={{ local_ip }}
      external_ids:ovn-encap-type=geneve
  - name: "start OVN controller"
    shell: /usr/share/openvswitch/scripts/ovn-ctl start_controller
  - name: "install docker"
    include_role:
      name: angstwad.docker_ubuntu
  - name: "install kubernetes"
    include_role:
      name: gantsign.kubernetes
    vars:
      kubernetes_node_type: worker
  - name: "Set the k8s API server address in the OVS database"
    shell: >
      ovs-vsctl set Open_vSwitch . external_ids:k8s-api-server={{ central_ip }}:8080
  - name: "clone ovn-kubernetes repository"
    git:
      repo: "https://github.com/openvswitch/ovn-kubernetes"
      dest: "ovn-k"
      force: true
  - name: "install requirements for ovn-kubernetes"
    shell: pip install .
    args:
      chdir: "ovn-k"
  - name: "initialize ovn minion"
    shell: >
      ovn-k8s-overlay minion-init
      --cluster-ip-subnet="10.0.0.0/24"
      --minion-switch-subnet="10.0.2.0/24"
      --node-name={{ ansible_hostname }}
    args:
      chdir: "ovn-k"
  - name: ""
    shell: >
      ovn-k8s-util nics-to-bridge eth0 &&
      dhclient breth0
    args:
      chdir: "ovn-k"
  - name: "configure gateway"
    shell: >
      ovn-k8s-overlay gateway-init
      --cluster-ip-subnet="10.0.0.0/24"
      --bridge-interface breth0
      --physical-ip {{ ec2_private_ip_address }}
      --node-name={{ ansible_hostname }}
      --default-gw "172.31.64.1"
    args:
      chdir: "ovn-k"
  - name: "demux gateway traffic"
    shell: >
      ovn-k8s-gateway-helper --physical-bridge=breth0 --physical-interface=eth0 --pidfile --detach
    args:
      chdir: "ovn-k"
